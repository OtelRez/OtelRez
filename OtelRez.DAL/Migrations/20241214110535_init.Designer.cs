// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OtelRez.DAL.DbContexts;

#nullable disable

namespace OtelRez.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241214110535_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OtelRez.Entity.Entities.Concrete.Kullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateOnly?>("DogumTarihi")
                        .HasColumnType("date");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Soyadi")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Mail")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.HasIndex("Tel")
                        .IsUnique();

                    b.ToTable("Kullanicilar");
                });

            modelBuilder.Entity("OtelRez.Entity.Entities.Concrete.Oda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Fiyat")
                        .HasColumnType("int");

                    b.Property<bool>("Musait")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("OdaNumarasi")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<int>("OdaTurId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("OdaNumarasi")
                        .IsUnique();

                    b.HasIndex("OdaTurId");

                    b.ToTable("Odalar");
                });

            modelBuilder.Entity("OtelRez.Entity.Entities.Concrete.OdaTur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<short>("Kapasite")
                        .HasColumnType("smallint");

                    b.Property<string>("TurAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TurDetay")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("TurAdi")
                        .IsUnique();

                    b.ToTable("OdaTurleri");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Kapasite = (short)1,
                            TurAdi = "Tek Kisilik",
                            TurDetay = "Tek yataklı oda"
                        },
                        new
                        {
                            Id = 2,
                            Kapasite = (short)2,
                            TurAdi = "İki Kisilik",
                            TurDetay = "İki yataklı oda"
                        },
                        new
                        {
                            Id = 3,
                            Kapasite = (short)2,
                            TurAdi = "İki Kisilik Double",
                            TurDetay = "İki kişilik tek yatak"
                        },
                        new
                        {
                            Id = 4,
                            Kapasite = (short)3,
                            TurAdi = "Uc Kisilik",
                            TurDetay = "Üç tek kişilik"
                        },
                        new
                        {
                            Id = 5,
                            Kapasite = (short)3,
                            TurAdi = "Uc Kisilik Double",
                            TurDetay = "1 double yatak 1 tek kişilik yatak"
                        },
                        new
                        {
                            Id = 6,
                            Kapasite = (short)2,
                            TurAdi = "King",
                            TurDetay = "Double yatak"
                        });
                });

            modelBuilder.Entity("OtelRez.Entity.Entities.Concrete.Personel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("IzinHakki")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(30);

                    b.Property<int>("PersonelMeslekId")
                        .HasColumnType("int");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Soyadi")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("PersonelMeslekId");

                    b.HasIndex("RoleId");

                    b.ToTable("Personeller");
                });

            modelBuilder.Entity("OtelRez.Entity.Entities.Concrete.PersonelGiris", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Mail")
                        .IsUnique();

                    b.HasIndex("PersonelId")
                        .IsUnique();

                    b.ToTable("PersonelGiris");
                });

            modelBuilder.Entity("OtelRez.Entity.Entities.Concrete.PersonelMeslek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Maas")
                        .HasColumnType("int");

                    b.Property<string>("Meslek")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Meslek")
                        .IsUnique();

                    b.ToTable("PersonelMeslekler");
                });

            modelBuilder.Entity("OtelRez.Entity.Entities.Concrete.Rezervasyon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Cikis")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("Giris")
                        .HasColumnType("datetime2");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<int>("OdaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("KullaniciId");

                    b.HasIndex("OdaId")
                        .IsUnique();

                    b.ToTable("Rezervasyonlar");
                });

            modelBuilder.Entity("OtelRez.Entity.Entities.Concrete.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RoleAdi")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("RoleAdi")
                        .IsUnique();

                    b.ToTable("Roller");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleAdi = "Yonetici"
                        },
                        new
                        {
                            Id = 2,
                            RoleAdi = "Resepsiyonist"
                        },
                        new
                        {
                            Id = 3,
                            RoleAdi = "Kullanici"
                        });
                });

            modelBuilder.Entity("OtelRez.Entity.Entities.Concrete.Kullanici", b =>
                {
                    b.HasOne("OtelRez.Entity.Entities.Concrete.Role", "Role")
                        .WithMany("Kullanicilar")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("OtelRez.Entity.Entities.Concrete.Oda", b =>
                {
                    b.HasOne("OtelRez.Entity.Entities.Concrete.OdaTur", "OdaTur")
                        .WithMany("Odalar")
                        .HasForeignKey("OdaTurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OdaTur");
                });

            modelBuilder.Entity("OtelRez.Entity.Entities.Concrete.Personel", b =>
                {
                    b.HasOne("OtelRez.Entity.Entities.Concrete.PersonelMeslek", "PersonelMeslek")
                        .WithMany("Personeller")
                        .HasForeignKey("PersonelMeslekId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OtelRez.Entity.Entities.Concrete.Role", "Role")
                        .WithMany("Personeller")
                        .HasForeignKey("RoleId");

                    b.Navigation("PersonelMeslek");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("OtelRez.Entity.Entities.Concrete.PersonelGiris", b =>
                {
                    b.HasOne("OtelRez.Entity.Entities.Concrete.Personel", "Personel")
                        .WithOne("PersonelGiris")
                        .HasForeignKey("OtelRez.Entity.Entities.Concrete.PersonelGiris", "PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("OtelRez.Entity.Entities.Concrete.Rezervasyon", b =>
                {
                    b.HasOne("OtelRez.Entity.Entities.Concrete.Kullanici", "Kullanici")
                        .WithMany("Rezervasyonlar")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OtelRez.Entity.Entities.Concrete.Oda", "Oda")
                        .WithOne("Rezervasyon")
                        .HasForeignKey("OtelRez.Entity.Entities.Concrete.Rezervasyon", "OdaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");

                    b.Navigation("Oda");
                });

            modelBuilder.Entity("OtelRez.Entity.Entities.Concrete.Kullanici", b =>
                {
                    b.Navigation("Rezervasyonlar");
                });

            modelBuilder.Entity("OtelRez.Entity.Entities.Concrete.Oda", b =>
                {
                    b.Navigation("Rezervasyon")
                        .IsRequired();
                });

            modelBuilder.Entity("OtelRez.Entity.Entities.Concrete.OdaTur", b =>
                {
                    b.Navigation("Odalar");
                });

            modelBuilder.Entity("OtelRez.Entity.Entities.Concrete.Personel", b =>
                {
                    b.Navigation("PersonelGiris")
                        .IsRequired();
                });

            modelBuilder.Entity("OtelRez.Entity.Entities.Concrete.PersonelMeslek", b =>
                {
                    b.Navigation("Personeller");
                });

            modelBuilder.Entity("OtelRez.Entity.Entities.Concrete.Role", b =>
                {
                    b.Navigation("Kullanicilar");

                    b.Navigation("Personeller");
                });
#pragma warning restore 612, 618
        }
    }
}
